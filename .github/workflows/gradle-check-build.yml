name: Gradle Check and Build Workflow
env:
  # required for local testing without risking pulling the wrong image
  TEST_TAG: gipo999/tomcat-webapp-boilerplate:test
on:
  pull_request:
    branches:
      - "dev"
      - "app-start-test"
  workflow_dispatch: {}
jobs:
  build-linux:
    permissions:
      security-events: write
      packages: read
      issues: write
      actions: read
      contents: read
    if: github.event.pull_request.draft == false
    name: Lint and Build on Linux Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources Step
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - name: Setup CI environment
        uses: ./.github/actions/ci-setup
        # run the gradle check and build tasks
      - name: Build with Gradle Wrapper Step
        # buildWar runs check, test, war tasks
        # at this point we won't know if the app will run in a container
        run: ./gradlew buildWar
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c # v4.4.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      # test the docker image
      - name: Setup DOCKER environment
        uses: ./.github/actions/docker-setup
      - name: Build and export to docker
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5
        with:
          push: false
          context: .
          file: ./Dockerfile
          load: true # load the image after building so it can be used in the next steps
          platforms: linux/amd64
          tags: ${{ env.TEST_TAG }}
      # - name: Test docker image
      #   run: |
      #     docker run --rm ${{ env.TEST_TAG }}
      - name: Run docker image
        run: |
          docker run -d -p 8080:8080 ${{ env.TEST_TAG }}
      # - name: Verify docker image endpoint
      #   # it returns 200 with json {"status":"UP"}
      #   run: |
      #     curl -s http://localhost:8080/tomcat-webapp-boilerplate/app/base/health | grep "UP"
      - name: Test docker image endpoint
        # Use the retry action
        uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3
        with:
          max_attempts: 5
          retry_on: error
          timeout_seconds: 10
          # You can specify the shell commands you want to retry here
          command: |
            curl -s http://localhost:8080/tomcat-webapp-boilerplate/app/base/health | grep "UP"
      # attack
      - name: Attack container CI
        uses: ./.github/actions/attack
# we don't care about windows for this app since it only runs on linux
