name: Vulnerability scans Workflow
on:
  # WARN: secrets not available from pull_request forks
  #
  # same as snyk action
  # we can't run this on PRs from forks as snyk token can't be used from forks
  # for security reasons, prs from forks are not allowed to use/read secrets
  #
  # Another note: the generated sarif can be uploaded to the GitHub Code Scanning dashboard
  # but we don't want to upload security vulns for code that is not merged yet
  #
  # pull_request:
  #   branches: ["dev"]
  push:
    branches:
      # - "app-start-test"
      - "dev"
      - "next"
  schedule:
    # - cron: "0 0 * * 0" # every Sunday at midnight
    - cron: "0 0 * * *" # every day at midnight
  workflow_dispatch: {}
jobs:
  vulnerability-scans:
    concurrency:
      # use case: for example, when someone pushes a commit to a PR, the workflow will be triggered again
      # we want to cancel previous jobs and only run the latest one
      # TODO: check if this is the correct group to do this
      # github.ref is the branch name
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      # required for local testing without risking pulling the wrong image
      TEST_TAG: gipo999/tomcat-webapp-boilerplate:test-${{ github.run_number }}
    permissions:
      security-events: write
      packages: read
      issues: write
      actions: read
      contents: write
    if: github.event.pull_request.draft == false
    name: Vulnerability scans Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources Step
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      # setup the CI environment using a private composite action
      - name: Setup CI environment
        uses: ./.github/actions/ci-setup
        # run the gradle check and build tasks
      - name: Build with Gradle Wrapper Step
        # buildWar runs check, test, war tasks
        # at this point we won't know if the app will run in a container
        # we don't check and test here.
        # The job is delegated to check build action which runs on PR too
        # Saves minutes, fails fast
        run: ./gradlew war
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c # v4.4.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      # gets cache
      - name: Setup DOCKER environment
        uses: ./.github/actions/docker-setup
      # test the docker container health, must be up
      - name: Build, run and health check container
        uses: ./.github/actions/build-run-testcontainer
        with:
          docker_tag: ${{ env.TEST_TAG }}
          port_maps: "8080:8080"
          load: true
          push: false
      # attack with private composite action
      # uses zap, wapiti, nmap, snyk-container
      - name: Attack container CI
        uses: ./.github/actions/attack
        if: github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        with:
          docker_tag: ${{ env.TEST_TAG }}
          pat: ${{ secrets.PAT }}
          snyk_token: ${{ secrets.SNYK_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run-nmap: false
          run-snyk: true
          run-wapiti: true
          run-zap: true
      #
      # NOTE:
      # for now, code security reports are difficult as we
      # require parsing of all outputs and conversion to sarif
      # this for every tool that doesn't have it builtin
      #
      # since we not parsing and converting to sarif
      # for this repo we will just upload the raw outputs to gh pages as
      # reference
      #
      - name: create all folders
        run: |
          mkdir -p ./docs/gh-pages/zap
          mkdir -p ./docs/gh-pages/nmap
          mkdir -p ./docs/gh-pages/wapiti
          mkdir -p ./docs/gh-pages/snyk-container
      - name: add nmap links to docs/gh-pages/index.html
        if: ${{ steps.attack.outputs.nmap == 'true' }}
        run: |
          # NOTE: for now, nmap deactivated as it possibly exposes github vulns
          echo "<a href='/tomcat-webapp-boilerplate/nmap/vulner-output.log'>Nmap Vulnerabilities Report</a>" >> ./docs/gh-pages/index.html
          echo "<a href='/tomcat-webapp-boilerplate/nmap/direct-output.log'>Nmap Direct Report</a>" >> ./docs/gh-pages/index.html
          echo "<a href='/tomcat-webapp-boilerplate/nmap/vulscan-output.log'>Nmap Vulscan Report</a>" >> ./docs/gh-pages/index.html
      - name: add zap links to docs/gh-pages/index.html
        if: ${{ steps.attack.outputs.zap == 'true' }}
        run: |
          echo "<a href='/tomcat-webapp-boilerplate/zap/report_html.html'>ZAP Report</a>" >> ./docs/gh-pages/index.html
          echo "<a href='/tomcat-webapp-boilerplate/zap/report_json.json'>ZAP Report json</a>" >> ./docs/gh-pages/index.html
      - name: add wapiti links to docs/gh-pages/index.html
        if: ${{ steps.attack.outputs.wapiti == 'true' }}
        run: |
          echo "<a href='/tomcat-webapp-boilerplate/wapiti/out.html'>Wapiti Report</a>" >> ./docs/gh-pages/index.html
      - name: add snyk links to docs/gh-pages/index.html
        if: ${{ steps.attack.outputs.snyk == 'true' }}
        run: |
          echo "<a href='/tomcat-webapp-boilerplate/snyk-container/snyk-container.json'>Snyk Container Report</a>" >> ./docs/gh-pages/index.html
        #
      # Copy zap report to docs/gh-pages/zap
      - name: Copy zap report to docs/gh-pages/zap
        if: ${{ steps.attack.outputs.zap == 'true' }}
        run: mv ./report_html.html ./docs/gh-pages/zap/report_html.html
      - name: Copy zap report to docs/gh-pages/zap
        if: ${{ steps.attack.outputs.zap == 'true' }}
        run: mv ./report_json.json ./docs/gh-pages/zap/report_json.json
      # Copy snyk-container report to docs/gh-pages/snyk-container
      - name: Copy snyk-container.sarif report to docs/gh-pages/snyk-container
        if: ${{ steps.attack.outputs.snyk == 'true' }}
        run: mv ./snyk-container.sarif ./docs/gh-pages/snyk-container/snyk-container.json
      # Copy wapiti report to docs/gh-pages/wapiti
      - name: Copy wapiti report to docs/gh-pages/nmap
        if: ${{ steps.attack.outputs.wapiti == 'true' }}
        # requires sudo as docker container creates those files runs as root
        run: |
          # we don't know the exact name of the generated report (based on timestamp)
          # needed to point the index.html link to the correct file
          ls -d .wapiti/generated_report/local* | xargs -I {} sudo mv {} .wapiti/generated_report/out.html
          sudo mv ./.wapiti/generated_report/* ./docs/gh-pages/wapiti/
      # NOTE: for now, nmap deactivated as it possibly exposes github vulns
      - name: Copy nmap report to docs/gh-pages/nmap
        if: ${{ steps.attack.outputs.nmap == 'true' }}
        # requires sudo as docker container creating those files runs as root
        run: |
          # echo "nmap reports are deactivated for now as they potentially expose github runners vulnerabilities" >> ./docs/gh-pages/nmap/vulscan-output.log
          sudo mv ./nmap-reports/vulner/vulner-output.log ./docs/gh-pages/nmap/vulner-output.log
          sudo mv ./nmap-reports/direct/direct-output.log ./docs/gh-pages/nmap/direct-output.log
          sudo mv ./nmap-reports/vulscan/vulscan-output.log ./docs/gh-pages/nmap/vulscan-output.log
      - name: Change ownerhip of docs/gh-pages
        run: |
          sudo chown -R $USER:$USER ./docs/gh-pages
      #
      # post all results to github pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        if: github.ref == 'refs/heads/dev'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/gh-pages
